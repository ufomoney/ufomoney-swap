{"code":"import JSBI from 'jsbi';\r\nexport var ChainId;\r\n(function (ChainId) {\r\n    ChainId[ChainId[\"MAINNET\"] = 1] = \"MAINNET\";\r\n    ChainId[ChainId[\"ROPSTEN\"] = 3] = \"ROPSTEN\";\r\n    ChainId[ChainId[\"RINKEBY\"] = 4] = \"RINKEBY\";\r\n    ChainId[ChainId[\"G\\u00D6RLI\"] = 5] = \"G\\u00D6RLI\";\r\n    ChainId[ChainId[\"KOVAN\"] = 42] = \"KOVAN\";\r\n    ChainId[ChainId[\"BSC_MAINNET\"] = 56] = \"BSC_MAINNET\";\r\n    ChainId[ChainId[\"BSC_TESTNET\"] = 97] = \"BSC_TESTNET\";\r\n})(ChainId || (ChainId = {}));\r\nexport var TradeType;\r\n(function (TradeType) {\r\n    TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\r\n    TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\r\n})(TradeType || (TradeType = {}));\r\nexport var Rounding;\r\n(function (Rounding) {\r\n    Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\r\n    Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\r\n    Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\r\n})(Rounding || (Rounding = {}));\r\nexport const FACTORY_ADDRESS = '0x553990F2CBA90272390f62C5BDb1681fFc899675';\r\nexport const INIT_CODE_HASH = '0xb1e98e21a5335633815a8cfb3b580071c2e4561c50afd57a8746def9ed890b18';\r\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000);\r\n// exports for internal consumption\r\nexport const ZERO = JSBI.BigInt(0);\r\nexport const ONE = JSBI.BigInt(1);\r\nexport const TWO = JSBI.BigInt(2);\r\nexport const THREE = JSBI.BigInt(3);\r\nexport const FIVE = JSBI.BigInt(5);\r\nexport const TEN = JSBI.BigInt(10);\r\nexport const _100 = JSBI.BigInt(100);\r\nexport const _997 = JSBI.BigInt(997);\r\nexport const _1000 = JSBI.BigInt(1000);\r\nexport var SolidityType;\r\n(function (SolidityType) {\r\n    SolidityType[\"uint8\"] = \"uint8\";\r\n    SolidityType[\"uint256\"] = \"uint256\";\r\n})(SolidityType || (SolidityType = {}));\r\nexport const SOLIDITY_TYPE_MAXIMA = {\r\n    [SolidityType.uint8]: JSBI.BigInt('0xff'),\r\n    [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n};\r\n//# sourceMappingURL=constants.js.map","references":["/root/work/uniswap/SwapLiquidity-sdk/node_modules/jsbi/jsbi.d.ts"],"map":"{\"version\":3,\"file\":\"constants.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/constants.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAKvB,MAAM,CAAN,IAAY,OAQX;AARD,WAAY,OAAO;IACjB,2CAAW,CAAA;IACX,2CAAW,CAAA;IACX,2CAAW,CAAA;IACX,iDAAS,CAAA;IACT,wCAAU,CAAA;IACV,oDAAgB,CAAA;IAChB,oDAAgB,CAAA;AAClB,CAAC,EARW,OAAO,KAAP,OAAO,QAQlB;AAED,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,uDAAW,CAAA;IACX,yDAAY,CAAA;AACd,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAED,MAAM,CAAN,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,mDAAU,CAAA;IACV,yDAAa,CAAA;IACb,+CAAQ,CAAA;AACV,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,4CAA4C,CAAA;AAE3E,MAAM,CAAC,MAAM,cAAc,GAAG,oEAAoE,CAAA;AAElG,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AAElD,mCAAmC;AACnC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAClC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACjC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACjC,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACnC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAClC,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;AAClC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AACpC,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AACpC,MAAM,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AAEtC,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,+BAAe,CAAA;IACf,mCAAmB,CAAA;AACrB,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACzC,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,oEAAoE,CAAC;CAC1G,CAAA\"}","dts":{"name":"/root/work/uniswap/SwapLiquidity-sdk/src/constants.d.ts","writeByteOrderMark":false,"text":"import JSBI from 'jsbi';\r\nexport declare type BigintIsh = JSBI | bigint | string;\r\nexport declare enum ChainId {\r\n    MAINNET = 1,\r\n    ROPSTEN = 3,\r\n    RINKEBY = 4,\r\n    GÃ–RLI = 5,\r\n    KOVAN = 42,\r\n    BSC_MAINNET = 56,\r\n    BSC_TESTNET = 97\r\n}\r\nexport declare enum TradeType {\r\n    EXACT_INPUT = 0,\r\n    EXACT_OUTPUT = 1\r\n}\r\nexport declare enum Rounding {\r\n    ROUND_DOWN = 0,\r\n    ROUND_HALF_UP = 1,\r\n    ROUND_UP = 2\r\n}\r\nexport declare const FACTORY_ADDRESS = \"0x553990F2CBA90272390f62C5BDb1681fFc899675\";\r\nexport declare const INIT_CODE_HASH = \"0xb1e98e21a5335633815a8cfb3b580071c2e4561c50afd57a8746def9ed890b18\";\r\nexport declare const MINIMUM_LIQUIDITY: JSBI;\r\nexport declare const ZERO: JSBI;\r\nexport declare const ONE: JSBI;\r\nexport declare const TWO: JSBI;\r\nexport declare const THREE: JSBI;\r\nexport declare const FIVE: JSBI;\r\nexport declare const TEN: JSBI;\r\nexport declare const _100: JSBI;\r\nexport declare const _997: JSBI;\r\nexport declare const _1000: JSBI;\r\nexport declare enum SolidityType {\r\n    uint8 = \"uint8\",\r\n    uint256 = \"uint256\"\r\n}\r\nexport declare const SOLIDITY_TYPE_MAXIMA: {\r\n    uint8: JSBI;\r\n    uint256: JSBI;\r\n};\r\n"}}
